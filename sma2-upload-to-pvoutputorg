#! /usr/bin/env python
#
# sma2-upload-to-pvoutputorg - Upload generation history to pvoutput.org
# Copyright (C) 2014 Peter Barker <pb-sma2@barker.dropbear.id.au>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

from __future__ import print_function

import sys

import smadata2.protocol
import smadata2.util
import smadata2.config
import smadata2.db

import smadata2.pvoutputuploader
import time
import datetime

config = smadata2.config.SMAData2Config()

db = config.database()

for system in config.systems():
    mypvoutput = config.pvoutput_connect()
    uploader = smadata2.pvoutputuploader.PVOutputUploader(db,system,mypvoutput)
    uploader.setVerbose(1)

    if True:
        print("Uploading unuploaded statuses for %s" % system)
        uploader.upload_unuploaded_statuses()


    # stuff below this line is useful for fixing data on the server - and
    # working out what needs fixing....
    if False:
        print("Showing production datapoints for %s" % system)
        uploader.show_production_for_datapoint("20141029", "19:15")
        uploader.show_production_for_datapoint("20141029", "19:20")
        uploader.show_production_for_datapoint("20141029", "19:25")
        uploader.show_production_for_datapoint("20141029", "19:30")
        uploader.show_production_for_datapoint("20141030", "06:30")
        uploader.show_production_for_datapoint("20141030", "06:35")
        uploader.show_production_for_datapoint("20141030", "06:40")

    if False:
        somedate = "20141031"
        print("reconciling data for system=%s date=%s" % (system,somedate))
        pvodate = mypvoutput.parse_date_and_time(somedate, '00:00')
        uploader.reconcile_date(pvodate)

    if False:
        somedate = "20141031"
        print("uploading data for date=%s system=%s" % (system,somedate))
        pvodate = mypvoutput.parse_date_and_time(somedate, '00:00')
        uploader.upload_statuses_for_day(pvodate)

    if False:
        print("reconciling all data for system %s" % (system))
        uploader.reconcile()

    if False:
        # untested:
        date = "20141104"
        fix = True
        print("doing date %s" % (system))
        uploader.do_date(date, fix)

sys.exit(0)
